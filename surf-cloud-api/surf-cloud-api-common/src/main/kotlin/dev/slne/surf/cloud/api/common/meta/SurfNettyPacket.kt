package dev.slne.surf.cloud.api.common.meta

import dev.slne.surf.cloud.api.common.netty.network.ConnectionProtocol
import dev.slne.surf.cloud.api.common.netty.network.protocol.PacketFlow
import org.jetbrains.annotations.ApiStatus.Internal

@Target(AnnotationTarget.CLASS)
@Retention(AnnotationRetention.RUNTIME)
annotation class SurfNettyPacket(
    val id: Int,
    val flow: PacketFlow,
    @Internal vararg val protocols: ConnectionProtocol = [ConnectionProtocol.RUNNING]
)

@Target(AnnotationTarget.PROPERTY)
@Retention(AnnotationRetention.RUNTIME)
annotation class PacketCodec

object DefaultIds {
    const val PROXIED_NETTY_PACKET = 0x00

    // Handshake
    const val SERVERBOUND_HANDSHAKE_PACKET = 0x01


    // Initialize
    const val CLIENTBOUND_INITIALIZE_CLIENT_PACKET = 0x02

    const val SERVERBOUND_INITIALIZE_REQUEST_ID_PACKET = 0x03
    const val CLIENTBOUND_INITIALIZE_ID_RESPONSE = 0x04

    // Login
    const val SERVERBOUND_LOGIN_START_PACKET = 0x05
    const val CLIENTBOUND_LOGIN_FINISHED_PACKET = 0x06
    const val SERVERBOUND_LOGIN_ACKNOWLEDGED_PACKET = 0x07
    const val CLIENTBOUND_LOGIN_DISCONNECT_PACKET = 0x08
    const val SERVERBOUND_KEY_PACKET =
        0x09 // Different protocol state so the ids can be overlapping
    const val CLIENTBOUND_KEY_PACKET = 0x0A

    // Pre-Running
    const val SERVERBOUND_READY_TO_RUN_PACKET = 0x00
    const val CLIENTBOUND_PRE_RUNNING_FINISHED_PACKET = 0x01
    const val SERVERBOUND_PRE_RUNNING_ACKNOWLEDGED_PACKET = 0x02
    const val SERVERBOUND_REQUEST_CONTINUATION = 0x03
    const val CLIENTBOUND_READY_TO_RUN_PACKET = 0x04

    // Running
    const val CLIENTBOUND_KEEP_ALIVE_PACKET = 0x09
    const val SERVERBOUND_KEEP_ALIVE_PACKET = 0x0A

    const val CLIENTBOUND_PING_PACKET = 0x0B
    const val SERVERBOUND_PONG_PACKET = 0x0C

    const val SERVERBOUND_PING_REQUEST_PACKET = 0x0D
    const val CLIENTBOUND_PING_REQUEST_RESPONSE_PACKET = 0x0E

    const val SERVERBOUND_BROADCAST_PACKET = 0x0F
    const val CLIENTBOUND_DISCONNECT_PACKET = 0x10

    const val SERVERBOUND_CLIENT_INFORMATION_PACKET = 0x11

    const val CLIENTBOUND_BUNDLE_DELIMITER_PACKET = 0x12
    const val CLIENTBOUND_BUNDLE_PACKET = 0x13
    const val SERVERBOUND_BUNDLE_DELIMITER_PACKET = 0x14
    const val SERVERBOUND_BUNDLE_PACKET = 0x15

    const val SERVERBOUND_SEND_MESSAGE_PACKET = 0x16
    const val CLIENTBOUND_SEND_MESSAGE_PACKET = 0x17

    const val SERVERBOUND_SEND_ACTION_BAR_PACKET = 0x18
    const val CLIENTBOUND_ACTION_BAR_PACKET = 0x19

    const val SERVERBOUND_SEND_PLAYER_LIST_HEADER_AND_FOOTER = 0x1A
    const val CLIENTBOUND_PLAYER_LIST_HEADER_AND_FOOTER = 0x1B

    const val SERVERBOUND_SEND_TITLE_PACKET = 0x1C
    const val CLIENTBOUND_TITLE_PACKET = 0x1D

    const val SERVERBOUND_SEND_TITLE_PART_PACKET = 0x1E
    const val CLIENTBOUND_TITLE_PART_PACKET = 0x1F

    const val SERVERBOUND_CLEAR_TITLE_PACKET = 0x20
    const val CLIENTBOUND_CLEAR_TITLE_PACKET = 0x21

    const val SERVERBOUND_RESET_TITLE_PACKET = 0x22
    const val CLIENTBOUND_RESET_TITLE_PACKET = 0x23

    const val SERVERBOUND_SHOW_BOSS_BAR_PACKET = 0x24
    const val CLIENTBOUND_SHOW_BOSS_BAR_PACKET = 0x25

    const val SERVERBOUND_HIDE_BOSS_BAR_PACKET = 0x26
    const val CLIENTBOUND_HIDE_BOSS_BAR_PACKET = 0x27

    const val SERVERBOUND_PLAY_SOUND_PACKET = 0x28
    const val CLIENTBOUND_PLAY_SOUND_PACKET = 0x29

    const val SERVERBOUND_STOP_SOUND_PACKET = 0x2A
    const val CLIENTBOUND_STOP_SOUND_PACKET = 0x2B

    const val SERVERBOUND_OPEN_BOOK_PACKET = 0x2C
    const val CLIENTBOUND_OPEN_BOOK_PACKET = 0x2D

    const val SERVERBOUND_SEND_RESOURCE_PACKS_PACKET = 0x2E
    const val CLIENTBOUND_SEND_RESOURCE_PACKS_PACKET = 0x2F

    const val SERVERBOUND_REMOVE_RESOURCE_PACKS_PACKET = 0x30
    const val CLIENTBOUND_REMOVE_RESOURCE_PACKS_PACKET = 0x31

    const val SERVERBOUND_CLEAR_RESOURCE_PACKS_PACKET = 0x32
    const val CLIENTBOUND_CLEAR_RESOURCE_PACKS_PACKET = 0x33

    const val PLAYER_CONNECT_TO_SERVER_PACKET = 0x34
    const val PLAYER_DISCONNECT_FROM_SERVER_PACKET = 0x35

    const val SERVERBOUND_REQUEST_DISPLAY_NAME_PACKET = 0x36
    const val CLIENTBOUND_REQUEST_DISPLAY_NAME_PACKET = 0x37
    const val RESPONSE_DISPLAY_NAME_PACKET_REQUEST_PACKET = 0x38

    const val CLIENTBOUND_REGISTER_SERVER_PACKET = 0x39
    const val CLIENTBOUND_UNREGISTER_SERVER_PACKET = 0x3A

    const val CLIENTBOUND_UPDATE_SERVER_INFORMATION_PACKET = 0x3B

    const val CLIENTBOUND_ADD_PLAYER_TO_SERVER = 0x3C
    const val CLIENTBOUND_REMOVE_PLAYER_FROM_SERVER = 0x3D

    const val SERVERBOUND_IS_SERVER_MANAGED_BY_THIS_PROXY_REQUEST = 0x3E
    const val CLIENTBOUND_IS_SERVER_MANAGED_BY_THIS_PROXY_RESPONSE = 0x3F

    const val CLIENTBOUND_TRANSFER_PLAYER_PACKET = 0x40
    const val SERVERBOUND_TRANSFER_PLAYER_PACKET_RESPONSE_PACKET = 0x41

    const val REQUEST_LUCKPERMS_META_DATA_PACKET = 0x42
    const val LUCKPERMS_META_DATA_RESPONSE_PACKET = 0x43

    const val SERVERBOUND_REQUEST_PLAYER_PERSISTENT_DATA_CONTAINER = 0x44
    const val CLIENTBOUND_PLAYER_PERSISTENT_DATA_CONTAINER_RESPONSE = 0x45
    const val SERVERBOUND_PLAYER_PERSISTENT_DATA_CONTAINER_UPDATE = 0x46

    const val SERVERBOUND_CONNECT_PLAYER_TO_SERVER = 0x47
    const val CLIENTBOUND_CONNECT_PLAYER_TO_SERVER_RESPONSE = 0x48

    const val BIDIRECTIONAL_DISCONNECT_PLAYER = 0x49

    const val BIDIRECTIONAL_TELEPORT_PLAYER = 0x4A
    const val BIDIRECTIONAL_TELEPORT_PLAYER_RESULT = 0x4B

    const val CLIENTBOUND_REGISTER_CLOUD_SERVERS_TO_PROXY = 0x4C
}
